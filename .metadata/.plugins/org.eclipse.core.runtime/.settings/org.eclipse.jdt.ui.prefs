content_assist_disabled_computers=org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.recommenders.calls.rcp.proposalCategory.templates\u0000org.eclipse.recommenders.chain.rcp.proposalCategory.chain\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000
content_assist_number_of_computers=19
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
fontPropagated=true
org.eclipse.jdt.ui.editor.tab.width=
org.eclipse.jdt.ui.formatterprofiles.version=12
org.eclipse.jdt.ui.javadoclocations.migrated=true
org.eclipse.jdt.ui.text.code_templates_migrated=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="hashtable_sew">Hashtable&lt;String,Integer&gt;ht \= new Hashtable&lt;String,Integer&gt;();&\#13;\r\n&\#13;\r\nht.put("Test",1);&\#13;\r\nht.put("Probe",2);&\#13;\r\nht.put("Pr\u00FCfung",3);</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="junit_sew">import org.junit.Assert;&\#13;\r\nimport org.junit.Test;&\#13;\r\nimport weiser.LKW;&\#13;\r\n&\#13;\r\n    @Test&\#13;\r\n    public void blackBoxTest(){&\#13;\r\n        LKW lkw \= new LKW("W TGM1823",4000,2000,2);&\#13;\r\n        Assert.assertEquals("Fehler",4000, lkw.getHoechstZulaessigesGesamtGewicht());  &\#13;\r\n    }</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="mockito_sew">import java.util.LinkedList;&\#13;\r\nimport java.nio.channels.UnsupportedAddressTypeException;&\#13;\r\nimport java.util.LinkedList;&\#13;\r\nimport org.junit.Test;&\#13;\r\nimport org.mockito.*;&\#13;\r\nimport static org.mockito.Mockito.*;&\#13;\r\nimport org.junit.Assert;&\#13;\r\n&\#13;\r\npublic class mock {&\#13;\r\n    @Test&\#13;\r\n     public void mock () {&\#13;\r\n      LinkedList l \= Mockito.mock(LinkedList.class);&\#13;\r\n      l.add(3);  // Das Element an Stelle 0&\#13;\r\n      l.add(2); //  Das Element an Stelle 1&\#13;\r\n      &\#13;\r\n      Mockito.when(l.get(1)).thenReturn(2);&\#13;\r\n\t  Mockito.when(l.get(1)).thenThrow(new RuntimeException());&\#13;\r\n      Assert.assertEquals(2, l.get(1));&\#13;\r\n     }&\#13;\r\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="rekursiv_sew">public class fibonacciZahlen {&\#13;\r\n&\#13;\r\n\tpublic static long fib (int zahl) {&\#13;\r\n\t  if (zahl&lt;1) {&\#13;\r\n\t   return 0;&\#13;\r\n\t  }&\#13;\r\n\t  if (zahl&gt;\=1 &amp;&amp; zahl &lt;\=2) {&\#13;\r\n\t   return 1;&\#13;\r\n\t  }&\#13;\r\n\t   return fib (zahl-1) + fib (zahl-2);&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n\tpublic static void main(String[] args) {&\#13;\r\n  &\#13;\r\n\t\tSystem.out.println(fib(24));&\#13;\r\n&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="suite_sew">import org.junit.runner.RunWith;&\#13;\r\nimport org.junit.runners.Suite;&\#13;\r\nimport org.junit.runners.Suite.SuiteClasses;&\#13;\r\n&\#13;\r\n@RunWith(Suite.class)&\#13;\r\n@SuiteClasses ({klasse1.class,klasse2.class})&\#13;\r\n&\#13;\r\npublic class TestMainSuite {}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="rekursiv2_sew">import java.io.File;&\#13;\r\n&\#13;\r\n&\#13;\r\npublic class SpeicherPlatz {&\#13;\r\n\tpublic String filePath \= "";&\#13;\r\n\t&\#13;\r\n\tpublic int files \= 0;&\#13;\r\n\t&\#13;\r\n\tpublic  void listFiles(String path){&\#13;\r\n\t\tFile f \= new File(path);&\#13;\r\n\t\tFile[] flist \= f.listFiles();&\#13;\r\n\t\t&\#13;\r\n\t\tfor(int i \= 0;i&lt;flist.length;i++){&\#13;\r\n\t\t\tif(flist[i].isDirectory()){&\#13;\r\n\t\t\t\tlistFiles(flist[i].getAbsolutePath());&\#13;\r\n\t\t\t}if(flist[i].isFile()){&\#13;\r\n\t\t\t\tfiles++;&\#13;\r\n\t\t\t}&\#13;\r\n\t\t}System.out.println("Datein\: " + files);&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\tpublic void listStorage(String path){&\#13;\r\n\t\tFile f \= new File(path);&\#13;\r\n\t\tFile[] flist \= f.listFiles();&\#13;\r\n\t\t&\#13;\r\n\t\t&\#13;\r\n\t\t&\#13;\r\n\t\tSystem.out.println(f.length());&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\t&\#13;\r\n\tpublic SpeicherPlatz(){&\#13;\r\n//\t\tlistFiles("C\:\\\\Users\\\\Dominic\\\\Desktop");&\#13;\r\n\t\tlistStorage("C\:\\\\Users\\\\Dominic\\\\Desktop");&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\tpublic static void main(String[] args) {&\#13;\r\n\t\tnew SpeicherPlatz();&\#13;\r\n\t\t&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n}&\#13;\r\n</template></templates>
org.eclipse.jdt.ui.text.templates_migrated=true
org.eclipse.jface.textfont=1|Consolas|10.0|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Consolas;
proposalOrderMigrated=true
spelling_locale_initialized=true
tabWidthPropagated=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
